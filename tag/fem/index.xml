<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FEM | Mahmoud Ammar</title>
    <link>/tag/fem/</link>
      <atom:link href="/tag/fem/index.xml" rel="self" type="application/rss+xml" />
    <description>FEM</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Thu, 15 Nov 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hufd51855d62eaf479e888c08860b63d40_58678_512x512_fill_lanczos_center_2.png</url>
      <title>FEM</title>
      <link>/tag/fem/</link>
    </image>
    
    <item>
      <title>Space-Time Finite Elements For 1D Heat Equation</title>
      <link>/project/spacetime/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/project/spacetime/</guid>
      <description>&lt;p&gt;An alternate method to model transient PDEs, where time is considered as a dimension, in contrast to the conventional transient FEM, where the space is discretized and a time intrgration scheme is applied. Thus, the 1D problem becomes 2D, and the shape functions are a tensor product of space and time. This approach is advntegous for its exponential convergence in time (when using high order shape functions), the ability to perform local time refinement, etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fluid-Structure Interaction Simulation with Multiple Interfaces</title>
      <link>/project/fsi/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/project/fsi/</guid>
      <description>&lt;p&gt;The report of the project aims to explain the literature review, work flow, and results of a group project. The tasks were to implement different coupling algorithms for two
and three springs systems, for a three coupled beams system, and finally solve an FSI problem with two interfaces. In this present work, the first two tasks were implemented in Python and different relaxation methods were used to compare the results, and the last task was implemented in Python using Kratos Multiphysics for the analysis, and GiD for visualization.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
